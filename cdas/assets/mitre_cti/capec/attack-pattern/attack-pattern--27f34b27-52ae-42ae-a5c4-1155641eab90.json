{
    "type": "bundle",
    "id": "bundle--ec15c1ed-b472-45c9-8826-7639736def57",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--27f34b27-52ae-42ae-a5c4-1155641eab90",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "created": "2014-06-23T00:00:00.000Z",
            "modified": "2014-06-23T00:00:00.000Z",
            "name": "Fuzzing for garnering J2EE/.NET-based stack traces, for application mapping",
            "description": "An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to cause the targeted application to return an error including a stack trace, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. The stack trace enumerates the chain of methods that led up to the point where the error was encountered. This can not only reveal the names of the methods (some of which may have known weaknesses) but possibly also the location of class files and libraries as well as parameter values. In some cases, the stack trace might even disclose sensitive configuration or user information.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/214.html",
                    "external_id": "CAPEC-214"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/209.html",
                    "external_id": "CWE-209"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/388.html",
                    "external_id": "CWE-388"
                }
            ],
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "x_capec_abstraction": "Detailed",
            "x_capec_prerequisites": [
                "The target application must fail to sanitize incoming messages adequately before processing and must generate a stack trace in at least some error situations."
            ],
            "x_capec_resources_required": [
                "The attacker must have sufficient access to send messages to the target. The attacker must also have the ability to observe the stack trace produced by the target application. Fuzzing tools, which automatically generate and send message variants, are necessary for this attack."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        }
    ]
}