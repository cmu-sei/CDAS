{
    "type": "bundle",
    "id": "bundle--7a697435-3ea7-4d7d-9e80-693f76845ccd",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--505cd025-b5c5-4393-a228-addace874465",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "created": "2014-06-23T00:00:00.000Z",
            "modified": "2017-05-01T00:00:00.000Z",
            "name": "Code Inclusion",
            "description": "An adversary exploits a weakness on the target to force arbitrary code to be retrieved locally or from a remote location and executed. This differs from code injection in that code injection involves the direct inclusion of code while code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/175.html",
                    "external_id": "CAPEC-175"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/829.html",
                    "external_id": "CWE-829"
                }
            ],
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "x_capec_abstraction": "Meta",
            "x_capec_example_instances": [
                "One example of this type of attack pattern is PHP file include attacks where the parameter of an include() function is set by a variable that an attacker is able to control. The result is that arbitrary code could be loaded into the PHP application and executed."
            ],
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The target application must include external code/libraries that are executed when the application runs and the adversary must be able to influence the specific files that get included.",
                "The victim must run the targeted application, possibly using the crafted parameters that the adversary uses to identify the code to include."
            ],
            "x_capec_resources_required": [
                "The adversary may need the capability to host code modules if they wish their own code files to be included."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.2"
        }
    ]
}