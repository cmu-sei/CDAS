{
    "type": "bundle",
    "id": "bundle--b1ac65ef-0f1b-4e09-922c-636a08875082",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--bd8c61f4-92e7-496c-8d88-e3274d9165c4",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "created": "2014-06-23T00:00:00.000Z",
            "modified": "2019-09-30T00:00:00.000Z",
            "name": "TCP SYN Ping",
            "description": "An adversary uses TCP SYN packets as a means towards host discovery. Typical RFC 793 behavior specifies that when a TCP port is open, a host must respond to an incoming SYN \"synchronize\" packet by completing stage two of the 'three-way handshake' - by sending an SYN/ACK in response. When a port is closed, RFC 793 behavior is to respond with a RST \"reset\" packet. This behavior can be used to 'ping' a target to see if it is alive by sending a TCP SYN packet to a port and then looking for a RST or an ACK packet in response. Due to the different responses from open and closed ports, SYN packets can be used to determine the remote state of the port. A TCP SYN ping is also useful for discovering alive hosts protected by a stateful firewall. In cases where a specific firewall rule does not block access to a port, a SYN packet can pass through the firewall to the host and solicit a response from either an open or closed port. When a stateful firewall is present, SYN pings are preferable to ACK pings because a stateful firewall will typically drop all unsolicited ACK packets as they are not part of an existing or new connection. TCP SYN pings often fail when a stateless ACL or firewall is configured to blanket-filter incoming packets to a port. The firewall device will discard any SYN packets to a blocked port. Often, an adversary will alternate between SYN and ACK pings to discover if a host is alive.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/299.html",
                    "external_id": "CAPEC-299"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html",
                    "external_id": "CWE-200"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Stuart McClure, Joel Scambray, George Kurtz, Hacking Exposed: Network Security Secrets & Solutions (6th Edition), 2009, McGraw Hill",
                    "external_id": "REF-33"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Defense Advanced Research Projects Agency Information Processing Techniques Office, Information Sciences Institute University of Southern California, RFC793 - Transmission Control Protocol, 1981--09, Defense Advanced Research Projects Agency (DARPA)",
                    "url": "http://www.faqs.org/rfcs/rfc793.html",
                    "external_id": "REF-128"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Gordon \"Fyodor\" Lyon, Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning (3rd \"Zero Day\" Edition,), 2008, Insecure.com LLC, ISBN: 978-0-9799587-1-7",
                    "external_id": "REF-34"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Mark Wolfgang, Host Discovery with Nmap, 2002--11",
                    "url": "http://nmap.org/docs/discovery.pdf",
                    "external_id": "REF-125"
                }
            ],
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Authorization": [
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ],
                "Confidentiality": [
                    "Other",
                    "Bypass Protection Mechanism",
                    "Hide Activities"
                ]
            },
            "x_capec_prerequisites": [
                "The ability to send a TCP SYN packet to a remote target. Depending upon the operating system, the ability to craft SYN packets may require elevated privileges."
            ],
            "x_capec_resources_required": [
                "SYN pings can be performed via the use of a port scanner or by raw socket manipulation using a scripting or programming language. Packet injection tools are also useful for this purpose. Depending upon the technique used it may also be necessary to sniff the network in order to see the response."
            ],
            "x_capec_skills_required": {
                "Low": "The adversary needs to know how to craft and send protocol commands from the command line or within a tool."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        }
    ]
}