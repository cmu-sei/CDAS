{
    "type": "bundle",
    "id": "bundle--6bd62eb3-9621-46c4-b180-8a5cdf8ef310",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--feed1b00-2f2b-490f-aee1-0de5b1fbf732",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "created": "2014-06-23T00:00:00.000Z",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Using Slashes and URL Encoding Combined to Bypass Validation Logic",
            "description": "This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/64.html",
                    "external_id": "CAPEC-64"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/177.html",
                    "external_id": "CWE-177"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/171.html",
                    "external_id": "CWE-171"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/173.html",
                    "external_id": "CWE-173"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/172.html",
                    "external_id": "CWE-172"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/73.html",
                    "external_id": "CWE-73"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/21.html",
                    "external_id": "CWE-21"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/22.html",
                    "external_id": "CWE-22"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html",
                    "external_id": "CWE-74"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html",
                    "external_id": "CWE-20"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html",
                    "external_id": "CWE-697"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html",
                    "external_id": "CWE-707"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Gunter Ollmann, URL Encoded Attacks - Attacks using the common web browser, CGISecurity.com",
                    "url": "http://www.cgisecurity.com/lib/URLEmbeddedAttacks.html",
                    "external_id": "REF-495"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "T. Berners-Lee, R. Fielding, L. Masinter, RFC 3986 - Uniform Resource Identifier (URI): Generic Syntax, 2005--01",
                    "url": "http://www.ietf.org/rfc/rfc3986.txt",
                    "external_id": "REF-496"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "T. Berners-Lee, L. Masinter, M. McCahill, RFC 1738 - Uniform Resource Locators (URL), 1994--12",
                    "url": "http://www.ietf.org/rfc/rfc1738.txt",
                    "external_id": "REF-497"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "HTML URL Encoding Reference, W3Schools.com, Refsnes Data",
                    "url": "http://www.w3schools.com/tags/ref_urlencode.asp",
                    "external_id": "REF-498"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "The URLEncode and URLDecode Page, Albion Research Ltd",
                    "url": "http://www.albionresearch.com/misc/urlencode.php",
                    "external_id": "REF-499"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "David Wheeler, Secure Programming for Linux and Unix HOWTO",
                    "url": "http://www.dwheeler.com/secure-programs/Secure-Programs-HOWTO/filter-html.html#VALIDATING-URIS",
                    "external_id": "REF-500"
                }
            ],
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Resource Consumption (Denial of Service)",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Read Data",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>Attack Example: Combined Encodings CesarFTP</xhtml:p>\n               <xhtml:p>Alexandre Cesari released a freeware FTP server for Windows that fails to provide proper filtering against multiple encoding. The FTP server, CesarFTP, included a Web server component that could be attacked with a combination of the triple-dot and URL encoding attacks.</xhtml:p>\n               <xhtml:p>An attacker could provide a URL that included a string like</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">/...%5C/</xhtml:div>\n               <xhtml:p>This is an interesting exploit because it involves an aggregation of several tricks: the escape character, URL encoding, and the triple dot.</xhtml:p>See also: CVE-2001-1335"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application accepts and decodes URL string request.",
                "The application performs insufficient filtering/canonicalization on the URLs."
            ],
            "x_capec_skills_required": {
                "Low": "An attacker can try special characters in the URL and bypass the URL validation.",
                "Medium": "The attacker may write a script to defeat the input filtering mechanism."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        }
    ]
}