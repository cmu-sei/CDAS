{
    "type": "bundle",
    "id": "bundle--143ae668-8511-46c5-ba62-f0fab0d35e36",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--83fc5df7-bb04-4ce7-b308-c9428e8f4456",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "created": "2014-06-23T00:00:00.000Z",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Passing Local Filenames to Functions That Expect a URL",
            "description": "This attack relies on client side code to access local files and resources instead of URLs. When the client browser is expecting a URL string, but instead receives a request for a local file, that execution is likely to occur in the browser process space with the browser's authority to local files. The attacker can send the results of this request to the local files out to a site that they control. This attack may be used to steal sensitive authentication data (either local or remote), or to gain system profile information to launch further attacks.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/48.html",
                    "external_id": "CAPEC-48"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/241.html",
                    "external_id": "CWE-241"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/706.html",
                    "external_id": "CWE-706"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Core Concepts: Attack Patterns",
                    "url": "https://websec.io/2012/11/26/Core-Concepts-Attack-Patterns.html",
                    "external_id": "REF-416"
                }
            ],
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data"
                ]
            },
            "x_capec_example_instances": [
                "\n               <xhtml:p>J2EE applications frequently use .properties files to store configuration information including JDBC connections, LDAP connection strings, proxy information, system passwords and other system metadata that is valuable to attackers looking to probe the system or bypass policy enforcement points. When these files are stored in publicly accessible directories and are allowed to be read by the public user, then an attacker can list the directory identify a .properties file and simply load its contents in the browser listing its contents. A standard Hibernate properties file contains</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">hibernate.connection.driver_class = org.postgresql.Driverhibernate.connection.url = jdbc:postgresql://localhost/mydatabasehibernate.connection.username = usernamehibernate.connection.password = passwordhibernate.c3p0.min_size=5hibernate.c3p0.max_size=20</xhtml:div>\n               <xhtml:p>Even if the attacker cannot write this file, there is plenty of information to leverage to gain further access.</xhtml:p>\n            "
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The victim's software must not differentiate between the location and type of reference passed the client software, e.g. browser"
            ],
            "x_capec_skills_required": {
                "Medium": "Attacker identifies known local files to exploit"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.2"
        }
    ]
}