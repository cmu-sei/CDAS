{
    "external_references": [
        {
            "source_name": "mitre-attack",
            "external_id": "T1569.001",
            "url": "https://attack.mitre.org/techniques/T1569/001"
        },
        {
            "source_name": "Launchctl Man",
            "url": "https://ss64.com/osx/launchctl.html",
            "description": "SS64. (n.d.). launchctl. Retrieved March 28, 2020."
        },
        {
            "url": "https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/",
            "description": "Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.",
            "source_name": "Sofacy Komplex Trojan"
        }
    ],
    "created_by_ref": "The MITRE Corporation",
    "name": "Launchctl",
    "description": "Adversaries may abuse launchctl to execute commands or programs. Launchctl controls the macOS launchd process, which handles things like [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s and [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s, but can execute other commands or programs itself. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.(Citation: Launchctl Man)\n\nBy loading or reloading [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s, adversaries can install persistence or execute changes they made.(Citation: Sofacy Komplex Trojan)\n\nRunning a command from launchctl is as simple as <code>launchctl submit -l <labelName> -- /Path/to/thing/to/execute \"arg\" \"arg\" \"arg\"</code>. Adversaries can abuse this functionality to execute code or even bypass application control if launchctl is an allowed process.",
    "id": "attack-pattern--810aa4ad-61c9-49cb-993f-daa06199421d",
    "type": "attack-pattern",
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "execution"
        }
    ],
    "modified": "2020-06-08T23:28:29.079Z",
    "created": "2020-03-10T18:26:56.187Z",
    "x_mitre_version": "1.0",
    "x_mitre_is_subtechnique": true,
    "x_mitre_permissions_required": [
        "User",
        "root"
    ],
    "x_mitre_detection": "KnockKnock can be used to detect persistent programs such as those installed via launchctl as launch agents or launch daemons. Additionally, every launch agent or launch daemon must have a corresponding plist file on disk which can be monitored. Monitor process execution from launchctl/launchd for unusual or unknown processes.",
    "x_mitre_data_sources": [
        "Process command-line parameters",
        "Process monitoring",
        "File monitoring"
    ],
    "x_mitre_platforms": [
        "macOS"
    ]
}