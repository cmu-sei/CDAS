{
    "id": "attack-pattern--198ce408-1470-45ee-b47f-7056050d4fc2",
    "name": "Application Discovery",
    "description": "Adversaries may seek to identify all applications installed on the device. One use case for doing so is to identify the presence of endpoint security applications that may increase the adversary's risk of detection. Another use case is to identify the presence of applications that the adversary may wish to target.\n\nOn Android, applications can use methods in the PackageManager class (Citation: Android-PackageManager) to enumerate other apps installed on device, or an entity with shell access can use the pm command line tool.\n\nOn iOS, apps can use private API calls to obtain a list of other apps installed on the device. (Citation: Kurtz-MaliciousiOSApps) However, use of private API calls will likely prevent the application from being distributed through Apple's App Store.",
    "references": [
        {
            "source_name": "mitre-mobile-attack",
            "url": "https://attack.mitre.org/techniques/T1418",
            "external_id": "T1418"
        },
        {
            "source_name": "Android-PackageManager",
            "description": "Android. (n.d.). PackageManager. Retrieved December 21, 2016.",
            "url": "https://developer.android.com/reference/android/content/pm/PackageManager.html"
        },
        {
            "source_name": "Kurtz-MaliciousiOSApps",
            "description": "Andreas Kurtz. (2014, September 18). Malicious iOS Apps. Retrieved December 21, 2016.",
            "url": "https://andreas-kurtz.de/2014/09/malicious-ios-apps/"
        }
    ],
    "platforms": [
        "Android",
        "iOS"
    ],
    "kill_chain": [
        {
            "kill_chain_name": "mitre-mobile-attack",
            "phase_name": "defense-evasion"
        },
        {
            "kill_chain_name": "mitre-mobile-attack",
            "phase_name": "discovery"
        }
    ]
}