{
    "created": "2017-10-25T14:48:32.328Z",
    "modified": "2019-09-23T13:26:01.263Z",
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-mobile-attack",
            "phase_name": "defense-evasion"
        }
    ],
    "type": "attack-pattern",
    "external_references": [
        {
            "source_name": "mitre-mobile-attack",
            "url": "https://attack.mitre.org/techniques/T1406",
            "external_id": "T1406"
        },
        {
            "external_id": "APP-21",
            "source_name": "NIST Mobile Threat Catalogue",
            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-21.html"
        },
        {
            "url": "http://pages.cs.wisc.edu/~vrastogi/static/papers/rcj13b.pdf",
            "description": "Vaibhav Rastogi, Yan Chen, and Xuxian Jiang. (2013, May). DroidChameleon: Evaluating Android Anti-malware against Transformation Attacks. Retrieved December 9, 2016.",
            "source_name": "Rastogi"
        },
        {
            "url": "http://ieeexplore.ieee.org/document/6234407",
            "description": "Yajin Zhou and Xuxian Jiang. (2012, May). Dissecting Android Malware: Characterization and Evolution. Retrieved December 9, 2016.",
            "source_name": "Zhou"
        },
        {
            "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/cybercriminals-improve-android-malware-stealth-routines-with-obad/",
            "description": "Veo Zhang. (2013, June 13). Cybercriminals Improve Android Malware Stealth Routines with OBAD. Retrieved December 9, 2016.",
            "source_name": "TrendMicro-Obad"
        },
        {
            "url": "http://www.slideshare.net/Shakacon/fruit-vs-zombies-defeat-nonjailbroken-ios-malware-by-claud-xiao",
            "description": "Claud Xiao. (2016, July). Fruit vs Zombies: Defeat Non-jailbroken iOS Malware. Retrieved December 9, 2016.",
            "source_name": "Xiao-iOS"
        }
    ],
    "description": "An app could contain malicious code in obfuscated or encrypted form, then deobfuscate or decrypt the code at runtime to evade many app vetting techniques.(Citation: Rastogi) (Citation: Zhou) (Citation: TrendMicro-Obad) (Citation: Xiao-iOS)",
    "name": "Obfuscated Files or Information",
    "created_by_ref": "The MITRE Corporation",
    "id": "attack-pattern--d13fa042-8f26-44e1-a2a8-af0bf8e2ac9a",
    "x_mitre_platforms": [
        "Android",
        "iOS"
    ],
    "x_mitre_tactic_type": [
        "Post-Adversary Device Access"
    ],
    "x_mitre_version": "2.0",
    "x_mitre_old_attack_id": "MOB-T1009",
    "x_mitre_detection": "Malicious obfuscation of files or information can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversary behavior."
}