{
    "type": "attack-pattern",
    "name": "Module Firmware",
    "description": "Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices. These devices may have their own set of firmware that is separate from the firmware of the main control system equipment. \n\nThis technique is similar to <span class=\"smw-format list-format \"><span class=\"smw-row\"><span class=\"smw-field\"><span class=\"smw-value\">System Firmware</span></span></span></span>, but is conducted on other system components that may not have the same capabilities or level of integrity checking. Although it results in a device re-image, malicious device firmware may provide persistent access to remaining devices. (Citation: References - Module Firmware)\n\nAn easy point of access for an adversary is the Ethernet card, which may have its own CPU, RAM, and operating system. The adversary may attack and likely exploit the computer on an Ethernet card. Exploitation of the Ethernet card computer may enable the adversary to accomplish additional attacks, such as the following: (Citation: References - Module Firmware)\n\n*Delayed Attack - The adversary may stage an attack in advance and choose when to launch it, such as at a particularly damaging time.\n\n*Brick the Ethernet Card - Malicious firmware may be programmed to result in an Ethernet card failure, requiring a factory return.\n\n*\"Random\" Attack or Failure - The adversary may load malicious firmware onto multiple field devices. Execution of an attack and the time it occurs is generated by a pseudo-random number generator. \n\n*A Field Device Worm - The adversary may choose to identify all field devices of the same model, with the end goal of performing a device-wide compromise.\n\n*Attack Other Cards on the Field Device - Although it is not the most important module in a field device, the Ethernet card is most accessible to the adversary and malware. Compromise of the Ethernet card may provide a more direct route to compromising other modules, such as the CPU module.\n\nPlatforms: SCADA/ICS device\n\nData Sources: Sequential event recorder, Network protocol analysis, Packet capture, Digital signatures\n\nPermissions Required: SYSTEM",
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-ics-attack",
            "phase_name": "persistence-ics"
        },
        {
            "kill_chain_name": "mitre-ics-attack",
            "phase_name": "impair-process-control"
        }
    ],
    "x_mitre_platforms": [
        "Windows",
        "Field Controller/RTU/PLC/IED",
        "Safety Instrumented System/Protection Relay"
    ],
    "external_references": [
        {
            "url": "https://collaborate.mitre.org/attackics/index.php/Technique/T839",
            "source_name": "mitre-ics-attack",
            "external_id": "T0839"
        },
        {
            "description": "Daniel Peck,  Dale Peterson. (2009, January 28). Leveraging Ethernet Card Vulnerabilities in Field Devices. Retrieved December 19, 2017.",
            "source_name": "References - Module Firmware",
            "url": "https://www.researchgate.net/publication/228849043%20Leveraging%20ethernet%20card%20vulnerabilities%20in%20field%20devices"
        }
    ],
    "created": "2020-05-21T17:43:26.506Z",
    "created_by_ref": "The MITRE Corporation",
    "x_mitre_data_sources": [
        "Sequential event recorder",
        "Network protocol analysis",
        "Packet capture",
        "Digital signatures"
    ],
    "x_mitre_permissions_required": [
        "SYSTEM"
    ],
    "modified": "2020-05-21T17:43:26.506Z",
    "id": "attack-pattern--efbf7888-f61b-4572-9c80-7e2965c60707"
}