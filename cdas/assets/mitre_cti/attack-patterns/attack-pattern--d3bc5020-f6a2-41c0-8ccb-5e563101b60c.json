{
    "external_references": [
        {
            "source_name": "mitre-mobile-attack",
            "external_id": "T1577",
            "url": "https://attack.mitre.org/techniques/T1577"
        },
        {
            "source_name": "Guardsquare Janus",
            "url": "https://www.guardsquare.com/en/blog/new-android-vulnerability-allows-attackers-modify-apps-without-affecting-their-signatures",
            "description": "Guarsquare. (2017, November 13). New Android vulnerability allows attackers to modify apps without affecting their signatures. Retrieved May 7, 2020."
        },
        {
            "source_name": "CheckPoint Agent Smith",
            "url": "https://research.checkpoint.com/2019/agent-smith-a-new-species-of-mobile-malware/",
            "description": "A. Hazum, F. He, I. Marom, B. Melnykov, A. Polkovnichenko. (2019, July 10). Agent Smith: A New Species of Mobile Malware. Retrieved May 7, 2020."
        }
    ],
    "created_by_ref": "The MITRE Corporation",
    "name": "Compromise Application Executable",
    "description": "Adversaries may modify applications installed on a device to establish persistent access to a victim. These malicious modifications can be used to make legitimate applications carry out adversary tasks when these applications are in use.\n\nThere are multiple ways an adversary can inject malicious code into applications. One method is by taking advantages of device vulnerabilities, the most well-known being Janus, an Android vulnerability that allows adversaries to add extra bytes to APK (application) and DEX (executable) files without affecting the file's signature. By being able to add arbitrary bytes to valid applications, attackers can seamlessly inject code into genuine executables without the user's knowledge.(Citation: Guardsquare Janus)\n\nAdversaries may also rebuild applications to include malicious modifications. This can be achieved by decompiling the genuine application, merging it with the malicious code, and recompiling it.(Citation: CheckPoint Agent Smith)\n\nAdversaries may also take action to conceal modifications to application executables and bypass user consent. These actions include altering modifications to appear as an update or exploiting vulnerabilities that allow activities of the malicious application to run inside a system application.(Citation: CheckPoint Agent Smith)",
    "id": "attack-pattern--d3bc5020-f6a2-41c0-8ccb-5e563101b60c",
    "type": "attack-pattern",
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-mobile-attack",
            "phase_name": "persistence"
        }
    ],
    "modified": "2020-05-27T13:23:34.159Z",
    "created": "2020-05-07T15:24:49.068Z",
    "x_mitre_version": "1.0",
    "x_mitre_is_subtechnique": false,
    "x_mitre_tactic_type": [
        "Post-Adversary Device Access"
    ],
    "x_mitre_detection": "This behavior is seamless to the user and is typically undetectable.",
    "x_mitre_platforms": [
        "Android"
    ]
}