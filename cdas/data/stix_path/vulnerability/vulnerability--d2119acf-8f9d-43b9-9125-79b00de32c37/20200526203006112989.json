{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--d2119acf-8f9d-43b9-9125-79b00de32c37",
    "created": "2020-05-26T20:30:06.112989Z",
    "modified": "2020-05-26T20:30:06.112989Z",
    "name": "CVE-2019-3701",
    "description": "An issue was discovered in can_can_gw_rcv in net/can/gw.c in the Linux kernel through 4.19.13. The CAN frame modification rules allow bitwise logical operations that can be also applied to the can_dlc field. The privileged user \"\"root\"\" with CAP_NET_ADMIN can create a CAN frame modification rule that makes the data length code a higher value than the available CAN frame data size. In combination with a configured checksum calculation where the result is stored relatively to the end of the data (e.g. cgw_csum_xor_rel) the tail of the skb (e.g. frag_list pointer in skb_shared_info) can be rewritten which finally can cause a system crash. Because of a missing check, the CAN drivers may write arbitrary content beyond the data registers in the CAN controller's I/O memory when processing can-gw manipulated outgoing frames."
}