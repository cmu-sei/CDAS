{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--22f37cb8-0294-4d01-9521-acfe80d11742",
    "created": "2020-05-26T20:29:27.981045Z",
    "modified": "2020-05-26T20:29:27.981045Z",
    "name": "CVE-2017-1000112",
    "description": "Linux kernel: Exploitable memory corruption due to UFO to non-UFO path switch. When building a UFO packet with MSG_MORE __ip_append_data() calls ip_ufo_append_data() to append. However in between two send() calls, the append path can be switched from UFO to non-UFO one, which leads to a memory corruption. In case UFO packet lengths exceeds MTU, copy = maxfraglen - skb->len becomes negative on the non-UFO path and the branch to allocate new skb is taken. This triggers fragmentation and computation of fraggap = skb_prev->len - maxfraglen. Fraggap can exceed MTU, causing copy = datalen - transhdrlen - fraggap to become negative. Subsequently skb_copy_and_csum_bits() writes out-of-bounds. A similar issue is present in IPv6 code. The bug was introduced in e89e9cf539a2 (\"\"[IPv4/IPv6]: UFO Scatter-gather approach\"\") on Oct 18 2005."
}