{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--d2c92566-6d8c-4a9c-9c9b-b8f1bec2ebc4",
    "created": "2020-05-26T20:30:06.281932Z",
    "modified": "2020-05-26T20:30:06.281932Z",
    "name": "CVE-2019-3901",
    "description": "A race condition in perf_event_open() allows local attackers to leak sensitive data from setuid programs. As no relevant locks (in particular the cred_guard_mutex) are held during the ptrace_may_access() call, it is possible for the specified target task to perform an execve() syscall with setuid execution before perf_event_alloc() actually attaches to it, allowing an attacker to bypass the ptrace_may_access() check and the perf_event_exit_task(current) call that is performed in install_exec_creds() during privileged execve() calls. This issue affects kernel versions before 4.8."
}