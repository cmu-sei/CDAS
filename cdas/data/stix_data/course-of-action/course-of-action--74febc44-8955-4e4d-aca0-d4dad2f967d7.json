{
    "type": "bundle",
    "id": "bundle--ee283854-7a04-4a04-acea-91ef4dd35998",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "course-of-action",
            "name": "Process Injection Mitigation",
            "description": "This type of attack technique cannot be easily mitigated with preventive controls since it is based on the abuse of operating system design features. For example, mitigating specific Windows API calls will likely have unintended side effects, such as preventing legitimate software (i.e., security products) from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. (Citation: GDSecurity Linux injection)\n\nIdentify or block potentially malicious software that may contain process injection functionality by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)\n\nUtilize Yama  (Citation: Linux kernel Yama) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux  (Citation: SELinux official), grsecurity  (Citation: grsecurity official), and AppArmor  (Citation: AppArmor official).",
            "external_references": [
                {
                    "external_id": "T1055",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/mitigations/T1055"
                },
                {
                    "source_name": "GDSecurity Linux injection",
                    "description": "McNamara, R. (2017, September 5). Linux Based Inter-Process Code Injection Without Ptrace(2). Retrieved December 20, 2017.",
                    "url": "https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html"
                },
                {
                    "source_name": "Beechey 2010",
                    "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                    "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599"
                },
                {
                    "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                    "source_name": "Windows Commands JPCERT",
                    "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html"
                },
                {
                    "source_name": "NSA MS AppLocker",
                    "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                    "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm"
                },
                {
                    "source_name": "Corio 2008",
                    "description": "Corio, C., & Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                    "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx"
                },
                {
                    "source_name": "TechNet Applocker vs SRP",
                    "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                    "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx"
                },
                {
                    "source_name": "Linux kernel Yama",
                    "description": "Linux Kernel Archives. (n.d.). Yama Documentation - ptrace_scope. Retrieved December 20, 2017.",
                    "url": "https://www.kernel.org/doc/Documentation/security/Yama.txt"
                },
                {
                    "source_name": "SELinux official",
                    "description": "SELinux Project. (2017, November 30). SELinux Project Wiki. Retrieved December 20, 2017.",
                    "url": "https://selinuxproject.org/page/Main_Page"
                },
                {
                    "source_name": "grsecurity official",
                    "description": "grsecurity. (2017, December 12). What is grsecurity?. Retrieved December 20, 2017.",
                    "url": "https://grsecurity.net/"
                },
                {
                    "source_name": "AppArmor official",
                    "description": "AppArmor. (2017, October 19). AppArmor Security Project Wiki. Retrieved December 20, 2017.",
                    "url": "http://wiki.apparmor.net/index.php/Main_Page"
                }
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2018-10-17T00:14:20.652Z",
            "id": "course-of-action--74febc44-8955-4e4d-aca0-d4dad2f967d7",
            "modified": "2019-07-25T11:28:40.438Z",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_version": "1.0",
            "x_mitre_deprecated": true
        }
    ]
}