{
    "type": "bundle",
    "id": "bundle--60d9946d-d20b-40b5-a0e8-a08bc91bc332",
    "spec_version": "2.0",
    "objects": [
        {
            "x_mitre_old_attack_id": "MOB-T1010",
            "name": "Download New Code at Runtime",
            "description": "An app could download and execute dynamic code (not included in the original application package) after installation to evade static analysis techniques (and potentially dynamic analysis techniques) used for application vetting or application store review.(Citation: Poeplau-ExecuteThis)\n\nOn Android, dynamic code could include native code, Dalvik code, or JavaScript code that uses the Android WebView's JavascriptInterface capability.(Citation: Bromium-AndroidRCE)\n\nOn iOS, techniques also exist for executing dynamic code downloaded after application installation.(Citation: FireEye-JSPatch)(Citation: Wang)",
            "id": "attack-pattern--6c49d50f-494d-4150-b774-a655022d20a6",
            "x_mitre_platforms": [
                "Android",
                "iOS"
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_version": "1.2",
            "type": "attack-pattern",
            "x_mitre_detection": "Downloading new code at runtime can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversary behavior.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-10-25T14:48:14.460Z",
            "x_mitre_tactic_type": [
                "Post-Adversary Device Access"
            ],
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-mobile-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "external_references": [
                {
                    "external_id": "T1407",
                    "source_name": "mitre-mobile-attack",
                    "url": "https://attack.mitre.org/techniques/T1407"
                },
                {
                    "source_name": "NIST Mobile Threat Catalogue",
                    "external_id": "APP-20",
                    "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-20.html"
                },
                {
                    "source_name": "Poeplau-ExecuteThis",
                    "description": "Sebastian Poeplau, Yanick Fratantonio, Antonio Bianchi, Christopher Kruegel, Giovanni Vigna. (2014, February). Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications. Retrieved December 21, 2016.",
                    "url": "https://www.internetsociety.org/sites/default/files/10_5_0.pdf"
                },
                {
                    "source_name": "Bromium-AndroidRCE",
                    "description": "Tom Sutcliffe. (2014, July 31). Remote code execution on Android devices. Retrieved December 9, 2016.",
                    "url": "https://labs.bromium.com/2014/07/31/remote-code-execution-on-android-devices/"
                },
                {
                    "source_name": "FireEye-JSPatch",
                    "description": "Jing Xie, Zhaofeng Chen, Jimmy Su. (2016, January 27). HOT OR NOT? THE BENEFITS AND RISKS OF IOS REMOTE HOT PATCHING. Retrieved December 9, 2016.",
                    "url": "https://www.fireeye.com/blog/threat-research/2016/01/hot_or_not_the_bene.html"
                },
                {
                    "source_name": "Wang",
                    "description": "Tielei Wang, Kangjie Lu, Long Lu, Simon Chung, and Wenke Lee. (2013, August). Jekyll on iOS: When Benign Apps Become Evil. Retrieved December 9, 2016.",
                    "url": "https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/wang_tielei"
                }
            ],
            "modified": "2019-10-09T19:40:52.090Z"
        }
    ]
}