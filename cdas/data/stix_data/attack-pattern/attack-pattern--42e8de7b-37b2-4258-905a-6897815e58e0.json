{
    "type": "bundle",
    "id": "bundle--03f85b04-5e8e-4e55-8f7f-71d74bc642b9",
    "spec_version": "2.0",
    "objects": [
        {
            "x_mitre_data_sources": [
                "File monitoring",
                "Process monitoring",
                "Binary file metadata"
            ],
            "name": "Masquerading",
            "description": "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. Several different variations of this technique have been observed.\n\nOne variant is for an executable to be placed in a commonly trusted directory or given the name of a legitimate, trusted program. Alternatively, the filename given may be a close approximation of legitimate programs or something innocuous. An example of this is when a common system utility or program is moved and renamed to avoid detection based on its usage.(Citation: FireEye APT10 Sept 2018) This is done to bypass tools that trust executables by relying on file name or path, as well as to deceive defenders and system administrators into thinking a file is benign by associating the name with something that is thought to be legitimate.\n\nA third variant uses the right-to-left override (RTLO or RLO) character (U+202E) as a means of tricking a user into executing what they think is a benign file type but is actually executable code. RTLO is a non-printing character that causes the text that follows it to be displayed in reverse.(Citation: Infosecinstitute RTLO Technique) For example, a Windows screensaver file named\u00a0<code>March 25 \\u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>. A common use of this technique is with spearphishing attachments since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.(Citation: Trend Micro PLEAD RTLO)(Citation: Kaspersky RTLO Cyber Crime) RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.\u00a0\n\nAdversaries may modify a binary's metadata, including such fields as icons, version, name of the product, description, and copyright, to better blend in with the environment and increase chances of deceiving a security analyst or product.(Citation: Threatexpress MetaTwin 2017)\n\n### Windows\nIn another variation of this technique, an adversary may use a renamed copy of a legitimate utility, such as rundll32.exe. (Citation: Endgame Masquerade Ball) An alternative case occurs when a legitimate utility is moved to a different directory and also renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke)\n\nAn example of abuse of trusted locations in Windows would be the <code>C:\\Windows\\System32</code> directory. Examples of trusted binary names that can be given to malicious binares include \"explorer.exe\" and \"svchost.exe\".\n\n### Linux\nAnother variation of this technique includes malicious binaries changing the name of their running process to that of a trusted or benign process, after they have been launched as opposed to before. (Citation: Remaiten)\n\nAn example of abuse of trusted locations in Linux  would be the <code>/bin</code> directory. Examples of trusted binary names that can be given to malicious binaries include \"rsyncd\" and \"dbus-inotifier\". (Citation: Fysbis Palo Alto Analysis)  (Citation: Fysbis Dr Web Analysis)",
            "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
            "modified": "2019-09-10T17:44:59.498Z",
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_version": "1.2",
            "type": "attack-pattern",
            "x_mitre_detection": "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Endgame Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\n\nFor RTLO, detection methods should include looking for common formats of RTLO characters within filenames such as \"\\u202E\", \"[U+202E]\", and \"%E2%80%AE\". Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the a file containing it.",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "x_mitre_contributors": [
                "Oleg Kolesnikov, Securonix",
                "Nick Carr, FireEye",
                "David Lu, Tripwire",
                "Felipe Esp\u00f3sito, @Pr0teus",
                "ENDGAME",
                "Bartosz Jerzman"
            ],
            "created": "2017-05-31T21:30:38.511Z",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "external_references": [
                {
                    "external_id": "T1036",
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1036"
                },
                {
                    "source_name": "capec",
                    "external_id": "CAPEC-177",
                    "url": "https://capec.mitre.org/data/definitions/177.html"
                },
                {
                    "source_name": "FireEye APT10 Sept 2018",
                    "description": "Matsuda, A., Muhammad I. (2018, September 13). APT10 Targeting Japanese Corporations Using Updated TTPs. Retrieved September 17, 2018.",
                    "url": "https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html"
                },
                {
                    "description": "Security Ninja. (2015, April 16). Spoof Using Right to Left Override (RTLO) Technique. Retrieved April 22, 2019.",
                    "source_name": "Infosecinstitute RTLO Technique",
                    "url": "https://resources.infosecinstitute.com/spoof-using-right-to-left-override-rtlo-technique-2/"
                },
                {
                    "description": "Alintanahin, K.. (2014, May 23). PLEAD Targeted Attacks Against Taiwanese Government Agencies. Retrieved April 22, 2019.",
                    "source_name": "Trend Micro PLEAD RTLO",
                    "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/plead-targeted-attacks-against-taiwanese-government-agencies-2/"
                },
                {
                    "description": "Firsh, A.. (2018, February 13). Zero-day vulnerability in Telegram - Cybercriminals exploited Telegram flaw to launch multipurpose attacks. Retrieved April 22, 2019.",
                    "source_name": "Kaspersky RTLO Cyber Crime",
                    "url": "https://securelist.com/zero-day-vulnerability-in-telegram/83800/"
                },
                {
                    "description": "Vest, J. (2017, October 9). Borrowing Microsoft MetaData and Signatures to Hide Binary Payloads. Retrieved September 10, 2019.",
                    "source_name": "Threatexpress MetaTwin 2017",
                    "url": "https://threatexpress.com/blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/"
                },
                {
                    "source_name": "Endgame Masquerade Ball",
                    "description": "Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.",
                    "url": "https://www.endgame.com/blog/how-hunt-masquerade-ball"
                },
                {
                    "source_name": "F-Secure CozyDuke",
                    "description": "F-Secure Labs. (2015, April 22). CozyDuke: Malware Analysis. Retrieved December 10, 2015.",
                    "url": "https://www.f-secure.com/documents/996508/1030745/CozyDuke"
                },
                {
                    "source_name": "Remaiten",
                    "description": "Michal Malik AND Marc-Etienne M.L\u00e9veill\u00e9. (2016, March 30). Meet Remaiten \u2013 a Linux bot on steroids targeting routers and potentially other IoT devices. Retrieved September 7, 2017.",
                    "url": "https://www.welivesecurity.com/2016/03/30/meet-remaiten-a-linux-bot-on-steroids-targeting-routers-and-potentially-other-iot-devices/"
                },
                {
                    "source_name": "Fysbis Palo Alto Analysis",
                    "description": "Bryan Lee and Rob Downs. (2016, February 12). A Look Into Fysbis: Sofacy\u2019s Linux Backdoor. Retrieved September 10, 2017.",
                    "url": "https://researchcenter.paloaltonetworks.com/2016/02/a-look-into-fysbis-sofacys-linux-backdoor/"
                },
                {
                    "source_name": "Fysbis Dr Web Analysis",
                    "description": "Doctor Web. (2014, November 21). Linux.BackDoor.Fysbis.1. Retrieved December 7, 2017.",
                    "url": "https://vms.drweb.com/virus/?i=4276269"
                },
                {
                    "description": "Carr, N.. (2018, October 25). Nick Carr Status Update Masquerading. Retrieved April 22, 2019.",
                    "source_name": "Twitter ItsReallyNick Masquerading Update",
                    "url": "https://twitter.com/ItsReallyNick/status/1055321652777619457"
                }
            ],
            "x_mitre_defense_bypassed": [
                "Whitelisting by file name or path"
            ]
        }
    ]
}