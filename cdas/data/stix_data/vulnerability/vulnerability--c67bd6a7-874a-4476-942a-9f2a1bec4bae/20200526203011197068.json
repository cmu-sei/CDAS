{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--c67bd6a7-874a-4476-942a-9f2a1bec4bae",
    "created": "2020-05-26T20:30:11.197068Z",
    "modified": "2020-05-26T20:30:11.197068Z",
    "name": "CVE-2020-11105",
    "description": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests."
}