{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--6e29f20b-866e-49c8-8925-2736766957a0",
    "created": "2020-05-26T20:30:01.663738Z",
    "modified": "2020-05-26T20:30:01.663738Z",
    "name": "CVE-2019-1559",
    "description": "If an application encounters a fatal protocol error and then calls SSL_shutdown() twice (once to send a close_notify, and once to receive one) then OpenSSL can respond differently to the calling application if a 0 byte record is received with invalid padding compared to if a 0 byte record is received with an invalid MAC. If the application then behaves differently based on that in a way that is detectable to the remote peer, then this amounts to a padding oracle that could be used to decrypt data. In order for this to be exploitable \"\"non-stitched\"\" ciphersuites must be in use. Stitched ciphersuites are optimised implementations of certain commonly used ciphersuites. Also the application must call SSL_shutdown() twice even if a protocol error has occurred (applications should not do this but some do anyway). Fixed in OpenSSL 1.0.2r (Affected 1.0.2-1.0.2q)."
}