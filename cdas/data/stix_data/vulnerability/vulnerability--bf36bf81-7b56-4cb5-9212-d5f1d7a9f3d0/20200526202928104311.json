{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--bf36bf81-7b56-4cb5-9212-d5f1d7a9f3d0",
    "created": "2020-05-26T20:29:28.104311Z",
    "modified": "2020-05-26T20:29:28.104311Z",
    "name": "CVE-2017-1000253",
    "description": "Linux distributions that have not patched their long-term kernels with https://git.kernel.org/linus/a87938b2e246b81b4fb713edb371a9fa3c5c3c86 (committed on April 14, 2015). This kernel vulnerability was fixed in April 2015 by commit a87938b2e246b81b4fb713edb371a9fa3c5c3c86 (backported to Linux 3.10.77 in May 2015), but it was not recognized as a security threat. With CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE enabled, and a normal top-down address allocation strategy, load_elf_binary() will attempt to map a PIE binary into an address range immediately below mm->mmap_base. Unfortunately, load_elf_ binary() does not take account of the need to allocate sufficient space for the entire binary which means that, while the first PT_LOAD segment is mapped below mm->mmap_base, the subsequent PT_LOAD segment(s) end up being mapped above mm->mmap_base into the are that is supposed to be the \"\"gap\"\" between the stack and the binary."
}